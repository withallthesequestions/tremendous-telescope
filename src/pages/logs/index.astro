---
import { getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';
import LogLineEntry from '../../components/LogLineEntry.astro';

const publishedLogs = await getCollection('logs', ({ data }) => {
	return data.draft !== true;
});

/* publishedLogs.sort(
	(a, b) => b.data.pubDate.getTime() - a.data.pubDate.getTime()
); */
const tags = [...new Set(publishedLogs.map((log) => log.data.tags).flat())];

const pageTitle = 'Logs';
---

<BaseLayout pageTitle={pageTitle}>
	<div id='tag-section'>
		<div
			id='box'
			style='display: inline-block; outline: solid 1px white; height: 35px; width: 35px;'
		>
		</div>
		<h2>
			<a href={`/tremendous-telescope/logs/tags/`}>Log Tags</a>:
		</h2>
		{
			tags.map((tag) => (
				<span class='tag'>
					<a href={`/tremendous-telescope/logs/tags/${tag}`}>{tag}</a>
				</span>
			))
		}
	</div>

	<h2>Logs</h2>

	<details>
		<summary>A category</summary>
		<ul>
			{
				publishedLogs.map((log) => (
					<li>
						<LogLineEntry
							url={`/logs/${log.id}/`}
							title={log.data.title}
							date={log.data.pubDate}
						/>
					</li>
				))
			}
		</ul>
	</details>
	<details>
		<summary>Another category</summary>
		<ul>
			{
				publishedLogs.map((log) => (
					<li>
						<LogLineEntry
							url={`/logs/${log.id}/`}
							title={log.data.title}
							date={log.data.pubDate}
						/>
					</li>
				))
			}
		</ul>
	</details>

	<ul>
		{
			publishedLogs.map((log) => (
				<li>
					<LogLineEntry
						url={`/logs/${log.id}/`}
						title={log.data.title}
						date={log.data.pubDate}
					/>
				</li>
			))
		}
	</ul>
</BaseLayout>
<style>
	ul {
		list-style: none;
		padding-inline-start: 0;
		margin: 0;
	}
	#tag-section {
		padding: 0.5rem 0 0.5rem 0;
		border-bottom: solid white 1px;
	}
</style>
